# Allocate a volume for InfluxDB
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  labels:
    app.kubernetes.io/name: poll-buddy-reporting-db
    app.kubernetes.io/component: reporting-db
    app.kubernetes.io/part-of: poll-buddy
    app.kubernetes.io/instance: master
    app: poll-buddy-reporting-db
  name: pollbuddy-volume-claim-influx-master
spec:
  #storageClassName: openebs-jiva-default # I think I can just let this default and be good
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1G

# Create a deployment to run the app in
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: poll-buddy-reporting-db
    app.kubernetes.io/component: reporting-db
    app.kubernetes.io/part-of: poll-buddy
    app.kubernetes.io/instance: master
    app: poll-buddy-reporting-db
  name: poll-buddy-reporting-db-deployment-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: poll-buddy-reporting-db
      app.kubernetes.io/component: reporting-db
      app.kubernetes.io/part-of: poll-buddy
      app.kubernetes.io/instance: master
      app: poll-buddy-reporting-db
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: poll-buddy-reporting-db
        app.kubernetes.io/component: reporting-db
        app.kubernetes.io/part-of: poll-buddy
        app.kubernetes.io/instance: master
        app: poll-buddy-reporting-db
    spec:
      restartPolicy: Always
      containers:
        - image: pollbuddy/reporting-db:kubernetes-setup
          name: reporting-db
          ports:
            - containerPort: 8086
              name: reporting-db
          volumeMounts:
            - mountPath: /var/lib/influxdb
              name: db-influx
      volumes:
        - name: db-influx
          persistentVolumeClaim:
            claimName: pollbuddy-volume-claim-influx-master

# Create a service to access the app from outside the cluster
---
apiVersion: v1
kind: Service
metadata:
  name: poll-buddy-reporting-db-service-master
  labels:
    app.kubernetes.io/name: poll-buddy-reporting-db-service-master
    app.kubernetes.io/component: reporting-db
    app.kubernetes.io/part-of: poll-buddy
    app.kubernetes.io/instance: master
    app: poll-buddy-reporting-db
spec:
  ports:
    - port: 8086
      protocol: TCP
      targetPort: reporting-db
  selector:
    app.kubernetes.io/name: poll-buddy-reporting-db-deployment-master
  type: NodePort

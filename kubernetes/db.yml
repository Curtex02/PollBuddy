# ConfigMap to store the startup script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: poll-buddy-db-configmap-init-script-master
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: db
    app.kubernetes.io/part-of: poll-buddy
    environment: production
    app: poll-buddy-db
data:
  mongo-user.sh: |
    mongo admin -u ${MONGO_INITDB_ROOT_USERNAME} -p ${MONGO_INITDB_ROOT_PASSWORD} <<EOF
        use ${DB_NAME}
        db.createUser({user: "${DB_USERNAME}", pwd: "${DB_USERPASSWORD}", roles: [
            { role: "readWrite", db: "${DB_NAME}" }
        ]});
    EOF

# ConfigMap to store the permission setting script
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: poll-buddy-db-configmap-permission-script-master
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: db
    app.kubernetes.io/part-of: poll-buddy
    environment: production
    app: poll-buddy-db
data:
  mongo-data-dir-permission.sh: |
    chown -R mongodb:mongodb ${MONGO_DATA_DIR}
    cp -r /var/lib/mongoKeyTemp /var/lib/mongoKey
    chown -R mongodb:mongodb /var/lib/mongoKey
    chmod 400 /var/lib/mongoKey/mongo.key
    chown -R mongodb:mongodb /var/lib/mongoKey/mongo.key
    

# ConfigMap to store the mongo key used to secure the inter-node communications
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: poll-buddy-db-configmap-internode-key-master
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: db
    app.kubernetes.io/part-of: poll-buddy
    environment: production
    app: poll-buddy-db
data:
  mongo.key: |
    ahaksdnqsakdqnajhvckqaafnxasxaxaxmaskdadadsasfsdsdfsf
    schcacnctcacncuadasdadadfbsasddfbadadwsioweewvaas
    dfasasakjsvnaa

# Service
---
apiVersion: v1
kind: Service
metadata:
  name: poll-buddy-db-service-master
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: db
    app.kubernetes.io/part-of: poll-buddy
    environment: production
    app: poll-buddy-db
spec:
  ports:
    - name: mongo
      port: 27017
      targetPort: 27017
  selector:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: db
    app.kubernetes.io/part-of: poll-buddy
    environment: production
    app: poll-buddy-db

# Service Accounts and Authorizations
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: poll-buddy-db-service-account-master
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: poll-buddy-db-service-role-master
rules:
  - apiGroups: ["*"]
    resources: ["configmaps"]
    verbs: ["*"]
  - apiGroups: ["*"]
    resources: ["deployments"]
    verbs: ["list", "watch"]
  - apiGroups: ["*"]
    resources: ["services"]
    verbs: ["*"]
  - apiGroups: ["*"]
    resources: ["pods"]
    verbs: ["get","list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: poll-buddy-db-service-role-binding-master
subjects:
  - kind: ServiceAccount
    name: poll-buddy-db-service-account-master
    namespace: default
roleRef:
  kind: ClusterRole
  name: poll-buddy-db-service-role-master
  apiGroup: rbac.authorization.k8s.io

# Create a StatefulSet to run in
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: poll-buddy-db-statefulset-master
  labels:
    app.kubernetes.io/name: mongodb
    app.kubernetes.io/component: db
    app.kubernetes.io/part-of: poll-buddy
    environment: production
    app: poll-buddy-db
spec:
  serviceName: poll-buddy-db-service-master
  podManagementPolicy: Parallel
  replicas: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: mongodb
      app.kubernetes.io/component: db
      app.kubernetes.io/part-of: poll-buddy
      environment: production
      app: poll-buddy-db
  template:
    metadata:
      labels:
        app.kubernetes.io/name: mongodb
        app.kubernetes.io/component: db
        app.kubernetes.io/part-of: poll-buddy
        environment: production
        app: poll-buddy-db
    spec:
      serviceAccountName: poll-buddy-db-service-account-master
      terminationGracePeriodSeconds: 10
      containers:
        - name: poll-buddy-mongodb-pod
          image: mongo:4.2
          imagePullPolicy: Always
          ports:
            - name: mongo
              containerPort: 27017
          command: [ "/bin/sh","-c" ]
          args: [ "/home/mongodb/mongo-data-dir-permission.sh && docker-entrypoint.sh mongod --replSet=rs0 --dbpath=/var/lib/mongodb --bind_ip=0.0.0.0 --keyFile=/var/lib/mongoKey/mongo.key" ]
          env:
            - name: MONGO_DATA_DIR
              value: /var/lib/mongodb
            - name: DB_NAME
              valueFrom:
                configMapKeyRef:
                  name: poll-buddy-db-configmap-master
                  key: db_name
            - name: MONGO_INITDB_ROOT_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: poll-buddy-db-configmap-master
                  key: db_admin_username
            - name: MONGO_INITDB_ROOT_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: poll-buddy-db-secrets-master
                  key: admin-password
            - name: DB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: poll-buddy-db-configmap-master
                  key: db_username
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: poll-buddy-db-secrets-master
                  key: user-password
          volumeMounts:
            - name: mongo-data
              mountPath: /var/lib/mongodb
            - name: poll-buddy-db-volume-init-script-master
              mountPath: /docker-entrypoint-initdb.d
            - name: poll-buddy-db-volume-permission-script-master
              mountPath: /home/mongodb
            - name: poll-buddy-db-volume-internode-key-master
              mountPath: /var/lib/mongoKeyTemp

        - name: mongo-sidecar
          image: cvallance/mongo-k8s-sidecar:latest
          env:
            - name: MONGO_SIDECAR_POD_LABELS
              value: "app.kubernetes.io/name=mongodb,app.kubernetes.io/component=db,app.kubernetes.io/part-of=poll-buddy,environment=production,app=poll-buddy-db"
            - name: KUBE_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
            - name: KUBERNETES_MONGO_SERVICE_NAME
              value: poll-buddy-db-service-master
            - name: MONGODB_USERNAME
              valueFrom:
                configMapKeyRef:
                  name: poll-buddy-db-configmap-master
                  key: db_admin_username
            - name: MONGODB_DATABASE
              value: admin
            - name: MONGODB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: poll-buddy-db-secrets-master
                  key: admin-password

      volumes:
        - name: poll-buddy-db-volume-init-script-master
          configMap:
            name: poll-buddy-db-configmap-init-script-master
            defaultMode: 0755
        - name: poll-buddy-db-volume-permission-script-master
          configMap:
            name: poll-buddy-db-configmap-permission-script-master
            defaultMode: 0755
        - name: poll-buddy-db-volume-internode-key-master
          configMap:
            name: poll-buddy-db-configmap-internode-key-master
            defaultMode: 0755

  volumeClaimTemplates:
    - metadata:
        name: mongo-data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi


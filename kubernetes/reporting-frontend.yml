# Create a service to access the deployment pods
---
apiVersion: v1
kind: Service
metadata:
  name: poll-buddy-reporting-service-master
  labels:
    app.kubernetes.io/name: poll-buddy-reporting-service-master
    app.kubernetes.io/component: reporting
    app.kubernetes.io/part-of: poll-buddy
    app.kubernetes.io/instance: master
    app: poll-buddy-reporting
spec:
  ports:
    - port: 3000
      protocol: TCP
      targetPort: reporting
  selector:
    app.kubernetes.io/name: poll-buddy-reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/part-of: poll-buddy
    app.kubernetes.io/instance: master
    app: poll-buddy-reporting
  type: ClusterIP

# Create a deployment to run in
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/name: poll-buddy-reporting
    app.kubernetes.io/component: reporting
    app.kubernetes.io/part-of: poll-buddy
    app.kubernetes.io/instance: master
    app: poll-buddy-reporting
  name: poll-buddy-reporting-deployment-master
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: poll-buddy-reporting
      app.kubernetes.io/component: reporting
      app.kubernetes.io/part-of: poll-buddy
      app.kubernetes.io/instance: master
      app: poll-buddy-reporting
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app.kubernetes.io/name: poll-buddy-reporting
        app.kubernetes.io/component: reporting
        app.kubernetes.io/part-of: poll-buddy
        app.kubernetes.io/instance: master
        app: poll-buddy-reporting
    spec:
      restartPolicy: Always
      containers:
        - image: pollbuddy/reporting:kubernetes-setup
          imagePullPolicy: Always
          name: reporting
          ports:
            - containerPort: 3000
              name: reporting
